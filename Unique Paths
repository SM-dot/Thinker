class Solution {
    int[][] t;

    int solve(int i, int j, int m , int n )
    {
        // checking for invalid move
        if (i >= m || j >= n)
            return 0;
        // winnning case
        if ( i == m - 1 && j == n - 1)
            return 1;
        // avoiding recalculations
        if (t[i][j] != -1)
            return t[i][j];

        int right = solve(i, j + 1, m , n );
        int down = solve(i + 1, j, m , n);
        return t[i][j] = right + down;
    }

    public int uniquePaths(int m, int n) {
        t = new int[m][n];
        for (int[] row: t)
            Arrays.fill(row, -1);
        return solve(0, 0, m , n);
    }
}
